(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{"013z":function(e,t,a){"use strict";var r=a("q1tI"),n=a.n(r),i=a("NmYn"),c=a.n(i),o=a("Wbzz"),l=a("Xrax"),s=a("k4MR"),b=a("TSYQ"),p=a.n(b),d=a("QH2O"),m=a.n(d),u=a("qKvR"),g=function(e){var t,a=e.title,r=e.theme,n=e.tabs,i=void 0===n?[]:n;return Object(u.b)("div",{className:p()(m.a.pageHeader,(t={},t[m.a.withTabs]=i.length,t[m.a.darkMode]="dark"===r,t))},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12"},Object(u.b)("h1",{id:"page-title",className:m.a.text},a)))))},h=a("BAC9"),j=function(e){var t=e.relativePagePath,a=e.repository,r=Object(o.useStaticQuery)("1364590287").site.siteMetadata.repository,n=a||r,i=n.baseUrl,c=n.subDirectory,l=i+"/edit/"+n.branch+c+"/src/pages"+t;return i?Object(u.b)("div",{className:"bx--row "+h.row},Object(u.b)("div",{className:"bx--col"},Object(u.b)("a",{className:h.link,href:l},"Edit this page on GitHub"))):null},y=a("FCXl"),O=a("dI71"),f=a("I8xM"),v=function(e){function t(){return e.apply(this,arguments)||this}return Object(O.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,r=e.slug,n=r.split("/").filter(Boolean).slice(-1)[0],i=a.map((function(e){var t,a=c()(e,{lower:!0,strict:!0}),i=a===n,l=new RegExp(n+"/?(#.*)?$"),s=r.replace(l,a);return Object(u.b)("li",{key:e,className:p()((t={},t[f.selectedItem]=i,t),f.listItem)},Object(u.b)(o.Link,{className:f.link,to:""+s},e))}));return Object(u.b)("div",{className:f.tabsContainer},Object(u.b)("div",{className:"bx--grid"},Object(u.b)("div",{className:"bx--row"},Object(u.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(u.b)("nav",{"aria-label":t},Object(u.b)("ul",{className:f.list},i))))))},t}(n.a.Component),x=a("MjG9"),C=a("CzIb"),N=a("Asxa"),w=a("OIbQ"),T=a.n(w),_=function(e){var t=e.date,a=new Date(t);return t?Object(u.b)(N.c,{className:T.a.row},Object(u.b)(N.a,null,Object(u.b)("div",{className:T.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,a=e.children,r=e.location,n=e.Title,i=t.frontmatter,b=void 0===i?{}:i,p=t.relativePagePath,d=t.titleType,m=b.tabs,h=b.title,O=b.theme,f=b.description,N=b.keywords,w=b.date,T=Object(C.a)().interiorTheme,k=Object(o.useStaticQuery)("2456312558").site.pathPrefix,I=k?r.pathname.replace(k,""):r.pathname,P=m?I.split("/").filter(Boolean).slice(-1)[0]||c()(m[0],{lower:!0}):"",B=O||T;return Object(u.b)(s.a,{tabs:m,homepage:!1,theme:B,pageTitle:h,pageDescription:f,pageKeywords:N,titleType:d},Object(u.b)(g,{title:n?Object(u.b)(n,null):h,label:"label",tabs:m,theme:B}),m&&Object(u.b)(v,{title:h,slug:I,tabs:m,currentTab:P}),Object(u.b)(x.a,{padded:!0},a,Object(u.b)(j,{relativePagePath:p}),Object(u.b)(_,{date:w})),Object(u.b)(y.a,{pageContext:t,location:r,slug:I,tabs:m,currentTab:P}),Object(u.b)(l.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},m4sI:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return p}));var r=a("wx14"),n=a("zLVn"),i=(a("q1tI"),a("7ljp")),c=a("013z"),o=(a("qKvR"),["components"]),l={},s={_frontmatter:l},b=c.a;function p(e){var t=e.components,a=Object(n.a)(e,o);return Object(i.b)(b,Object(r.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",null,"Private registry"),Object(i.b)("p",null,"In cases where the OpenShift cluster is in an environment with limited internet connectivity, you may want OpenShift to pull Cloud Pak images from a private image registry (aka container registry). There may also be other reasons for choosing a private registry over the entitled registry."),Object(i.b)("h2",null,"Configuring a private registry"),Object(i.b)("p",null,"The below steps outline how to configure a private registry for a Cloud Pak deployment. When the ",Object(i.b)("inlineCode",{parentName:"p"},"image_registry")," object is referenced by the Cloud Pak object (such as ",Object(i.b)("inlineCode",{parentName:"p"},"cp4d"),"), the deployer makes the following changes in OpenShift so that images are pulled from the private registry:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Global pull secret: The image registry’s credentials are retrieved from the vault (the secret name must be ",Object(i.b)("inlineCode",{parentName:"li"},"image-registry-<name>")," and an entry for the registry is added to the global pull secret (secret ",Object(i.b)("inlineCode",{parentName:"li"},"pull-secret")," in project ",Object(i.b)("inlineCode",{parentName:"li"},"openshift-config"),")."),Object(i.b)("li",{parentName:"ul"},"ImageContentSourcePolicy: This is a mapping between the original location of the image, for example ",Object(i.b)("inlineCode",{parentName:"li"},"quay.io/opencloudio/zen-metastoredb@sha256:582cac2366dda8520730184dec2c430e51009a854ed9ccea07db9c3390e13b29")," is mapped to ",Object(i.b)("inlineCode",{parentName:"li"},"registry.coc.uk.ibm.com:15000/opencloudio/zen-metastoredb@sha256:582cac2366dda8520730184dec2c430e51009a854ed9ccea07db9c3390e13b29"),"."),Object(i.b)("li",{parentName:"ul"},"Image registry settings: OpenShift keeps image registry settings in custom resource ",Object(i.b)("inlineCode",{parentName:"li"},"image.config.openshift.io/cluster"),". If a private registry with a self-signed certificate is configured, certificate authority’s PEM secret must be created as a configmap in the ",Object(i.b)("inlineCode",{parentName:"li"},"openshift-config")," project. The deployer uses the vault secret referenced in ",Object(i.b)("inlineCode",{parentName:"li"},"registry_trusted_ca_secret")," property to create or update the configmap so that OpenShift can connect to the registry in a secure manner. Alternatively, you add the ",Object(i.b)("inlineCode",{parentName:"li"},"registry_insecure: true")," property to pull images without checking the certificate.")),Object(i.b)("h3",null,"Using the IBM Container Registry as a private registry"),Object(i.b)("p",null,"If you want to use a private registry when running the deployer for a ROKS cluster on IBM Cloud, you must use the IBM Container Registry (ICR) service. The deployer will automatically create the specified namespace in the ICR and set up the credentials accordingly. Configure an ",Object(i.b)("a",{parentName:"p",href:"/cloud-pak-deployer/cpd-design/objects/cloud-paks#image_registry"},"image_registry")," object with the host name of the private registry and the namespace that holds the images. An example of using the ICR as a private registry:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"image_registry:\n- name: cpd409\n  registry_host_name: de.icr.io\n  registry_namespace: cpd409\n")),Object(i.b)("p",null,"The registry host name must end with ",Object(i.b)("inlineCode",{parentName:"p"},"icr.io")," and the registry namespace is mandatory. No other properties are needed; the deployer will retrieve them from IBM Cloud."),Object(i.b)("p",null,"If you have already created the ICR namespace, create a vault secret for the image registry credentials:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'./cp-deploy.sh vault set \\\n  -vs image-registry-cpd409\n  -vsv "admin:very_s3cret"\n')),Object(i.b)("p",null,"An example of configuring the private registry for a ",Object(i.b)("inlineCode",{parentName:"p"},"cp4d")," object is below:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"cp4d:\n- project: zen-40\n  openshift_cluster_name: {{ env_id }}\n  cp4d_version: 4.0.9\n  openshift_storage_name: ocs-storage\n  image_registry_name: cpd409\n")),Object(i.b)("p",null,"The Cloud Pak for Data installation refers to the ",Object(i.b)("inlineCode",{parentName:"p"},"cpd409")," ",Object(i.b)("inlineCode",{parentName:"p"},"image_registry")," object."),Object(i.b)("p",null,"If the ",Object(i.b)("inlineCode",{parentName:"p"},"ibm_cp_entitlement_key")," secret is in the vault at the time of running the deployer, the required images will be mirrored from the entitled registry to the private registry. If all images are already available in the private registry, just specify the ",Object(i.b)("inlineCode",{parentName:"p"},"--skip-mirror-images")," flag when you run the deployer."),Object(i.b)("h2",null,"Using a private registry for the Cloud Pak installation (non-IBM Cloud)"),Object(i.b)("p",null,"Configure an ",Object(i.b)("a",{parentName:"p",href:"/cloud-pak-deployer/cpd-design/objects/cloud-paks#image_registry"},"image_registry")," object with the host name of the private registry and some optional properties such as port number, CA certificate and whether insecure access to the registry is allowed."),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"image_registry:\n- name: cpd409\n  registry_host_name: registry.coc.uk.ibm.com\n  registry_port: 15000\n  registry_trusted_ca_secret: cpd409-ca-bundle\n")),Object(i.b)("p",null,"To create the vault secret for the image registry credentials:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},'./cp-deploy.sh vault set \\\n  -vs image-registry-cpd409\n  -vsv "admin:very_s3cret"\n')),Object(i.b)("p",null,"To create the vault secret for the CA bundle:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"./cp-deploy.sh vault set \\\n  -vs cpd409-ca-bundle\n  -vsf /tmp/ca.crt\n")),Object(i.b)("p",null,"Where ",Object(i.b)("inlineCode",{parentName:"p"},"ca.crt")," looks something like this:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"-----BEGIN CERTIFICATE-----\nMIIFszCCA5ugAwIBAgIUT02v9OdgdvjgQVslCuL0wwCVaE8wDQYJKoZIhvcNAQEL\nBQAwaTELMAkGA1UEBhMCVVMxETAPBgNVBAgMCE5ldyBZb3JrMQ8wDQYDVQQHDAZB\ncm1vbmsxFjAUBgNVBAoMDUlCTSBDbG91ZCBQYWsxHjAcBgNVBAMMFUlCTSBDbG91\n...\nmcutkgtbkq31XYZj0CiM451Qp8KnTx0=\n-----END CERTIFICATE-\n")),Object(i.b)("p",null,"An example of configuring the private registry for a ",Object(i.b)("inlineCode",{parentName:"p"},"cp4d")," object is below:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"},"cp4d:\n- project: zen-40\n  openshift_cluster_name: {{ env_id }}\n  cp4d_version: 4.0.9\n  openshift_storage_name: ocs-storage\n  image_registry_name: cpd409\n")),Object(i.b)("p",null,"The Cloud Pak for Data installation refers to the ",Object(i.b)("inlineCode",{parentName:"p"},"cpd409")," ",Object(i.b)("inlineCode",{parentName:"p"},"image_registry")," object."),Object(i.b)("p",null,"If the ",Object(i.b)("inlineCode",{parentName:"p"},"ibm_cp_entitlement_key")," secret is in the vault at the time of running the deployer, the required images will be mirrored from the entitled registry to the private registry. If all images are already available in the private registry, just specify the ",Object(i.b)("inlineCode",{parentName:"p"},"--skip-mirror-images")," flag when you run the deployer."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-cpd-design-components-private-registry-index-mdx-cf8eae544b5d59ffe68b.js.map