(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"013z":function(e,n,t){"use strict";var a=t("q1tI"),l=t.n(a),o=t("NmYn"),s=t.n(o),i=t("Wbzz"),c=t("Xrax"),r=t("k4MR"),d=t("TSYQ"),m=t.n(d),p=t("QH2O"),u=t.n(p),b=t("qKvR"),g=function(e){var n,t=e.title,a=e.theme,l=e.tabs,o=void 0===l?[]:l;return Object(b.b)("div",{className:m()(u.a.pageHeader,(n={},n[u.a.withTabs]=o.length,n[u.a.darkMode]="dark"===a,n))},Object(b.b)("div",{className:"bx--grid"},Object(b.b)("div",{className:"bx--row"},Object(b.b)("div",{className:"bx--col-lg-12"},Object(b.b)("h1",{id:"page-title",className:u.a.text},t)))))},h=t("BAC9"),k=function(e){var n=e.relativePagePath,t=e.repository,a=Object(i.useStaticQuery)("1364590287").site.siteMetadata.repository,l=t||a,o=l.baseUrl,s=l.subDirectory,c=o+"/edit/"+l.branch+s+"/src/pages"+n;return o?Object(b.b)("div",{className:"bx--row "+h.row},Object(b.b)("div",{className:"bx--col"},Object(b.b)("a",{className:h.link,href:c},"Edit this page on GitHub"))):null},y=t("FCXl"),v=t("dI71"),O=t("I8xM"),j=function(e){function n(){return e.apply(this,arguments)||this}return Object(v.a)(n,e),n.prototype.render=function(){var e=this.props,n=e.title,t=e.tabs,a=e.slug,l=a.split("/").filter(Boolean).slice(-1)[0],o=t.map((function(e){var n,t=s()(e,{lower:!0,strict:!0}),o=t===l,c=new RegExp(l+"/?(#.*)?$"),r=a.replace(c,t);return Object(b.b)("li",{key:e,className:m()((n={},n[O.selectedItem]=o,n),O.listItem)},Object(b.b)(i.Link,{className:O.link,to:""+r},e))}));return Object(b.b)("div",{className:O.tabsContainer},Object(b.b)("div",{className:"bx--grid"},Object(b.b)("div",{className:"bx--row"},Object(b.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(b.b)("nav",{"aria-label":n},Object(b.b)("ul",{className:O.list},o))))))},n}(l.a.Component),f=t("MjG9"),x=t("CzIb"),w=t("Asxa"),N=t("OIbQ"),T=t.n(N),P=function(e){var n=e.date,t=new Date(n);return n?Object(b.b)(w.c,{className:T.a.row},Object(b.b)(w.a,null,Object(b.b)("div",{className:T.a.text},"Page last updated: ",t.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};n.a=function(e){var n=e.pageContext,t=e.children,a=e.location,l=e.Title,o=n.frontmatter,d=void 0===o?{}:o,m=n.relativePagePath,p=n.titleType,u=d.tabs,h=d.title,v=d.theme,O=d.description,w=d.keywords,N=d.date,T=Object(x.a)().interiorTheme,_=Object(i.useStaticQuery)("2456312558").site.pathPrefix,z=_?a.pathname.replace(_,""):a.pathname,C=u?z.split("/").filter(Boolean).slice(-1)[0]||s()(u[0],{lower:!0}):"",I=v||T;return Object(b.b)(r.a,{tabs:u,homepage:!1,theme:I,pageTitle:h,pageDescription:O,pageKeywords:w,titleType:p},Object(b.b)(g,{title:l?Object(b.b)(l,null):h,label:"label",tabs:u,theme:I}),u&&Object(b.b)(j,{title:h,slug:z,tabs:u,currentTab:C}),Object(b.b)(f.a,{padded:!0},t,Object(b.b)(k,{relativePagePath:m}),Object(b.b)(P,{date:N})),Object(b.b)(y.a,{pageContext:n,location:a,slug:z,tabs:u,currentTab:C}),Object(b.b)(c.a,null))}},BAC9:function(e,n,t){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,n,t){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,n,t){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,n,t){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},ZaHR:function(e,n,t){"use strict";t.r(n),t.d(n,"_frontmatter",(function(){return c})),t.d(n,"default",(function(){return m}));var a=t("wx14"),l=t("zLVn"),o=(t("q1tI"),t("7ljp")),s=t("013z"),i=(t("qKvR"),["components"]),c={},r={_frontmatter:c},d=s.a;function m(e){var n=e.components,t=Object(l.a)(e,i);return Object(o.b)(d,Object(a.a)({},r,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h1",null,"Running deployer on OpenShift using console"),Object(o.b)("h2",null,"Log in to the OpenShift cluster"),Object(o.b)("p",null,"Log is as a cluster administrator to be able to run the deployer with the correct permissions."),Object(o.b)("h2",null,"Prepare the deployer project and the storage"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Go to the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Click the ”+” sign at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Paste the follliwng block (exactly into the window)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"---\napiVersion: v1\nkind: Namespace\nmetadata:\n  creationTimestamp: null\n  name: cloud-pak-deployer\n---\napiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: cloud-pak-deployer-sa\n  namespace: cloud-pak-deployer\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: system:openshift:scc:privileged\n  namespace: cloud-pak-deployer\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: system:openshift:scc:privileged\nsubjects:\n- kind: ServiceAccount\n  name: cloud-pak-deployer-sa\n  namespace: cloud-pak-deployer\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: cloud-pak-deployer-cluster-admin\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\nsubjects:\n- kind: ServiceAccount\n  name: cloud-pak-deployer-sa\n  namespace: cloud-pak-deployer\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n")),Object(o.b)("h2",null,"Set the entitlement key"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Update the secret below with your Cloud Pak entitlement key. Make sure the key is indented exactly as below."),Object(o.b)("li",{parentName:"ul"},"Go to the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Click the ”+” sign at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Paste the follliwng block (exactly into the window)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"---\napiVersion: v1\nkind: Secret\nmetadata:\n  name: cloud-pak-entitlement-key\n  namespace: cloud-pak-deployer\ntype: Opaque\nstringData:\n  cp-entitlement-key: |\n    YOUR_ENTITLEMENT_KEY\n")),Object(o.b)("h2",null,"Configure the Cloud Paks and service to be deployer"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Update the configuration below to match what you want to deploy, do not change indent"),Object(o.b)("li",{parentName:"ul"},"Go to the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Click the ”+” sign at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Paste the follliwng block (exactly into the window)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: cloud-pak-deployer-config\n  namespace: cloud-pak-deployer\ndata:\n  cpd-config.yaml: |\n    global_config:\n      environment_name: demo\n      cloud_platform: existing-ocp\n\n    openshift:\n    - name: cpd-demo\n      ocp_version: "4.10"\n      cluster_name: cpd-demo\n      domain_name: example.com\n      openshift_storage:\n      - storage_name: auto-storage\n        storage_type: auto\n\n    cp4d:\n    - project: cpd\n      openshift_cluster_name: cpd-demo\n      cp4d_version: 4.6.2\n      sequential_install: True\n      accept_licenses: True\n      cartridges:\n      - name: cp-foundation\n        license_service:\n          state: disabled\n          threads_per_core: 2\n      - name: lite\n\n      - name: analyticsengine \n        size: small \n        state: removed\n\n      - name: bigsql\n        state: removed\n\n      - name: ca\n        size: small\n        instances:\n        - name: ca-instance\n          metastore_ref: ca-metastore\n        state: removed\n\n      - name: cde\n        state: removed\n\n      - name: datagate\n        state: removed\n\n      - name: datastage-ent-plus\n        state: removed\n\n      - name: db2\n        size: small\n        instances:\n        - name: ca-metastore\n          metadata_size_gb: 20\n          data_size_gb: 20\n          backup_size_gb: 20  \n          transactionlog_size_gb: 20\n        state: removed\n\n      - name: db2wh\n        state: removed\n\n      - name: dmc\n        state: removed\n\n      - name: dods\n        size: small\n        state: removed\n\n      - name: dp\n        size: small\n        state: removed\n\n      - name: dv\n        size: small \n        instances:\n        - name: data-virtualization\n        state: removed\n\n      - name: hadoop\n        size: small\n        state: removed\n\n      - name: mdm\n        size: small\n        wkc_enabled: true\n        state: removed\n\n      - name: openpages\n        state: installed\n        instances:\n        - name: openpages-instance\n          size: xsmall\n\n      - name: planning-analytics\n        state: removed\n\n      - name: rstudio\n        size: small\n        state: removed\n\n      - name: spss\n        state: removed\n\n      - name: voice-gateway\n        replicas: 1\n        state: removed\n\n      - name: watson-assistant\n        size: small\n        state: removed\n\n      - name: watson-discovery\n        state: removed\n\n      - name: watson-ks\n        size: small\n        state: removed\n\n      - name: watson-openscale\n        size: small\n        state: removed\n\n      - name: watson-speech\n        stt_size: xsmall\n        tts_size: xsmall\n        state: removed\n\n      - name: wkc\n        size: small\n        state: removed\n\n      - name: wml\n        size: small\n        state: installed\n\n      - name: wml-accelerator\n        replicas: 1\n        size: small\n        state: removed\n\n      - name: wsl\n        state: installed\n')),Object(o.b)("h2",null,"Run the deployer"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Go to the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Click the ”+” sign at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Paste the following block (exactly into the window)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'apiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: cloud-pak-deployer\n  name: cloud-pak-deployer\n  namespace: cloud-pak-deployer\nspec:\n  parallelism: 1\n  completions: 1\n  backoffLimit: 0\n  template:\n    metadata:\n      name: cloud-pak-deployer\n      labels:\n        app: cloud-pak-deployer\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: quay.io/cloud-pak-deployer/cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CP_ENTITLEMENT_KEY\n          valueFrom:\n            secretKeyRef:\n              key: cp-entitlement-key\n              name: cloud-pak-entitlement-key\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config/config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: ["/bin/sh","-xc"]\n        args: \n          - /cloud-pak-deployer/cp-deploy.sh env apply -v\n      restartPolicy: Never\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        configMap:\n          name: cloud-pak-deployer-config\n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \n')),Object(o.b)("h2",null,"Optional: start debug job"),Object(o.b)("p",null,"The debug job can be useful if you want to access the status directory of the deployer if the deployer job has failed."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Go to the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Click the ”+” sign at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Paste the following block (exactly into the window)")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},'apiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: cloud-pak-deployer-debug\n  name: cloud-pak-deployer-debug\n  namespace: cloud-pak-deployer\nspec:\n  parallelism: 1\n  completions: 1\n  backoffLimit: 0\n  template:\n    metadata:\n      name: cloud-pak-deployer-debug\n      labels:\n        app: cloud-pak-deployer-debug\n    spec:\n      containers:\n      - name: cloud-pak-deployer-debug\n        image: quay.io/cloud-pak-deployer/cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config/config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: ["/bin/sh","-xc"]\n        args: \n          - sleep infinity\n      restartPolicy: Never\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        configMap:\n          name: cloud-pak-deployer-config\n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \n')),Object(o.b)("h2",null,"Follow the logs of the deployment"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Open the OpenShift console"),Object(o.b)("li",{parentName:"ul"},"Go to Compute —> Pods"),Object(o.b)("li",{parentName:"ul"},"Select ",Object(o.b)("inlineCode",{parentName:"li"},"cloud-pak-deployer")," as the project at the top of the page"),Object(o.b)("li",{parentName:"ul"},"Click the deployer pod"),Object(o.b)("li",{parentName:"ul"},"Click logs")))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-advanced-run-on-openshift-run-deployer-on-openshift-using-console-mdx-84f461a34070ce404262.js.map