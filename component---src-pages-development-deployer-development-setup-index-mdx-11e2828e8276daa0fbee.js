(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{"013z":function(e,t,n){"use strict";var a=n("q1tI"),o=n.n(a),l=n("NmYn"),r=n.n(l),i=n("Wbzz"),b=n("Xrax"),c=n("k4MR"),s=n("TSYQ"),p=n.n(s),u=n("QH2O"),d=n.n(u),m=n("qKvR"),h=function(e){var t,n=e.title,a=e.theme,o=e.tabs,l=void 0===o?[]:o;return Object(m.b)("div",{className:p()(d.a.pageHeader,(t={},t[d.a.withTabs]=l.length,t[d.a.darkMode]="dark"===a,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:d.a.text},n)))))},O=n("BAC9"),j=function(e){var t=e.relativePagePath,n=e.repository,a=Object(i.useStaticQuery)("1364590287").site.siteMetadata.repository,o=n||a,l=o.baseUrl,r=o.subDirectory,b=l+"/edit/"+o.branch+r+"/src/pages"+t;return l?Object(m.b)("div",{className:"bx--row "+O.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:O.link,href:b},"Edit this page on GitHub"))):null},g=n("FCXl"),y=n("dI71"),f=n("I8xM"),N=function(e){function t(){return e.apply(this,arguments)||this}return Object(y.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,a=e.slug,o=a.split("/").filter(Boolean).slice(-1)[0],l=n.map((function(e){var t,n=r()(e,{lower:!0,strict:!0}),l=n===o,b=new RegExp(o+"/?(#.*)?$"),c=a.replace(b,n);return Object(m.b)("li",{key:e,className:p()((t={},t[f.selectedItem]=l,t),f.listItem)},Object(m.b)(i.Link,{className:f.link,to:""+c},e))}));return Object(m.b)("div",{className:f.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",{"aria-label":t},Object(m.b)("ul",{className:f.list},l))))))},t}(o.a.Component),v=n("MjG9"),k=n("CzIb"),w=n("Asxa"),C=n("OIbQ"),x=n.n(C),P=function(e){var t=e.date,n=new Date(t);return t?Object(m.b)(w.c,{className:x.a.row},Object(m.b)(w.a,null,Object(m.b)("div",{className:x.a.text},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,n=e.children,a=e.location,o=e.Title,l=t.frontmatter,s=void 0===l?{}:l,p=t.relativePagePath,u=t.titleType,d=s.tabs,O=s.title,y=s.theme,f=s.description,w=s.keywords,C=s.date,x=Object(k.a)().interiorTheme,G=Object(i.useStaticQuery)("2456312558").site.pathPrefix,T=G?a.pathname.replace(G,""):a.pathname,A=d?T.split("/").filter(Boolean).slice(-1)[0]||r()(d[0],{lower:!0}):"",E=y||x;return Object(m.b)(c.a,{tabs:d,homepage:!1,theme:E,pageTitle:O,pageDescription:f,pageKeywords:w,titleType:u},Object(m.b)(h,{title:o?Object(m.b)(o,null):O,label:"label",tabs:d,theme:E}),d&&Object(m.b)(N,{title:O,slug:T,tabs:d,currentTab:A}),Object(m.b)(v.a,{padded:!0},n,Object(m.b)(j,{relativePagePath:p}),Object(m.b)(P,{date:C})),Object(m.b)(g.a,{pageContext:t,location:a,slug:T,tabs:d,currentTab:A}),Object(m.b)(b.a,null))}},BAC9:function(e,t,n){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,n){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,n){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,n){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},uEsJ:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return d}));var a,o=n("wx14"),l=n("zLVn"),r=(n("q1tI"),n("7ljp")),i=n("013z"),b=(n("qKvR"),["components"]),c={},s=(a="InlineNotification",function(e){return console.warn("Component "+a+" was not imported, exported, or provided by MDXProvider as global scope"),Object(r.b)("div",e)}),p={_frontmatter:c},u=i.a;function d(e){var t=e.components,n=Object(l.a)(e,b);return Object(r.b)(u,Object(o.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"Deployer Development Setup"),Object(r.b)("p",null,"Setting up a virtual machine or server to develop the Cloud Pak Deployer code. Focuses on initial setup of a server to run the deployer container, setting up Visual Studio Code, issuing GPG keys and running the deployer in development mode."),Object(r.b)("h2",null,"Set up a server for development"),Object(r.b)("p",null,"We recommend to use a Red Hat Linux server for development of the Cloud Pak Deployer, either using a virtual server in the cloud or a virtual machine on your workstation. Ideally you run Visual Studio Code on your workstation and connect it to the remote Red Hat Linux server, updating the code and running it immediately from that server."),Object(r.b)("h3",null,"Install required packages"),Object(r.b)("p",null,"To allow for remote development, a number of packages need to be installed on the Linux server. Not having these will cause VSCode not to work and the error messages are difficult to debug. To install these packages, run the following as the ",Object(r.b)("inlineCode",{parentName:"p"},"root")," user:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"yum install -y git podman wget unzip tar gpg pinentry\n")),Object(r.b)("p",null,"Additionally, you can also install EPEL and ",Object(r.b)("inlineCode",{parentName:"p"},"screen")," to make it easier to keep your session if it gets disconnected."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm\nyum install -y screen\n")),Object(r.b)("h3",null,"Set up development user"),Object(r.b)("p",null,"It is recommended to use a special development user (your user name) on the Linux server, rather than using ",Object(r.b)("inlineCode",{parentName:"p"},"root"),". Not only will this be more secure; it also prevent destructive mistakes. In the below steps, we create a user ",Object(r.b)("inlineCode",{parentName:"p"},"fk-dev")," and give it ",Object(r.b)("inlineCode",{parentName:"p"},"sudo")," permissions."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"useradd -G wheel fk-dev\n")),Object(r.b)("p",null,"To give the ",Object(r.b)("inlineCode",{parentName:"p"},"fk-dev")," permissions to run commands as ",Object(r.b)("inlineCode",{parentName:"p"},"root"),", change the ",Object(r.b)("inlineCode",{parentName:"p"},"sudo")," settings."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"visudo\n")),Object(r.b)("p",null,"Scroll down until you see the following line:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"# %wheel        ALL=(ALL)       NOPASSWD: ALL\n")),Object(r.b)("p",null,"Change the line to look like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"%wheel        ALL=(ALL)       NOPASSWD: ALL\n")),Object(r.b)("p",null,"Now, save the file by pressing Esc, followed by ",Object(r.b)("inlineCode",{parentName:"p"},":")," and ",Object(r.b)("inlineCode",{parentName:"p"},"x"),"."),Object(r.b)("h3",null,"Configure password-less SSH for development user"),Object(r.b)("p",null,"Especially when running the virtual server in the cloud, users would logon using their SSH key. This requires the public key of the workstation to be added to the development userâ€™s SSH configuration."),Object(r.b)("p",null,"Make sure you run the following commands as the development user (fk-dev):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"mkdir -p ~/.ssh\nchmod 700 ~/.ssh\ntouch ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n")),Object(r.b)("p",null,"Then, add the public key of your workstation to the ",Object(r.b)("inlineCode",{parentName:"p"},"authorized_keys")," file."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"vi ~/.ssh/authorized_keys\n")),Object(r.b)("p",null,"Press the ",Object(r.b)("inlineCode",{parentName:"p"},"i")," to enter insert mode for ",Object(r.b)("inlineCode",{parentName:"p"},"vi"),". Then paste the public SSH key, for example:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"ssh-rsa AAAAB3NzaC1yc2EAAAADAXABAAABAQEGUeXJr0ZHy1SPGOntmr/7ixmK3KV8N3q/+0eSfKVTyGbhUO9lC1+oYcDvwMrizAXBJYWkIIwx4WgC77a78....fP3S5WYgqL fk-dev\n")),Object(r.b)("p",null,"Finally save the file by pressing Esc, followed by ",Object(r.b)("inlineCode",{parentName:"p"},":")," and ",Object(r.b)("inlineCode",{parentName:"p"},"x"),"."),Object(r.b)("h3",null,"Configure Git for the development user"),Object(r.b)("p",null,"Run the following commands as the development user (fk-dev):"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'git config --global user.name "Your full name"\ngit config --global user.email "your_email_address"\ngit config --global credential.helper "cache --timeout=86400"\n')),Object(r.b)("h3",null,"Set up GPG for the development user"),Object(r.b)("p",null,"We also want to ensure that commits are verified (trusted) by signing them with a GPG key. This requires set up on the development server and also on your Git account."),Object(r.b)("p",null,"First, set up a new GPG key:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"gpg --default-new-key-algo rsa4096 --gen-key\n")),Object(r.b)("p",null,"You will be prompted to specify your user information:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Real name: Enter your full name"),Object(r.b)("li",{parentName:"ul"},"Email address: Your e-mail address that will be used to sign the commits")),Object(r.b)("p",null,"Press ",Object(r.b)("inlineCode",{parentName:"p"},"o")," at the following prompt:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"Change (N)ame, (E)mail, or (O)kay/(Q)uit?\n")),Object(r.b)("p",null,"Then, you will be prompted for a passphrase. You cannot use a passphrase for your GPG key if you want to use it for automatic signing of commits. Just press Enter multiple times until the GPG key has been generated."),Object(r.b)("p",null,"List the signatures of the known keys. You will use the signature to sign the commits and to retrieve the public key."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"gpg --list-signatures\n")),Object(r.b)("p",null,"Output will look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-output"},"/home/fk-dev/.gnupg/pubring.kbx\n-----------------------------------\npub   rsa4096 2022-10-30 [SC] [expires: 2024-10-29]\n      BC83E8A97538EDD4E01DC05EA83C67A6D7F71756\nuid           [ultimate] FK Developer <fk-dev@ibm.com>\nsig 3        A83C67A6D7F71756 2022-10-30  FK Developer <fk-dev@ibm.com>\n")),Object(r.b)("p",null,"You will use the signature to retrieve the public key:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"gpg --armor --export A83C67A6D7F71756\n")),Object(r.b)("p",null,"The public key will look something like below:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-output"},"-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQINBGNeGNQBEAC/y2tovX5s0Z+onUpisnMMleG94nqOtajXG1N0UbHAUQyKfirt\nO8t91ek+e5PEsVkR/RLIM1M1YkiSV4irxW/uFPucXHZDVH8azfnJjf6j6cXWt/ra\n1I2vGV3dIIQ6aJIBEEXC+u+N6rWpCOF5ERVrumGFlDhL/PY8Y9NM0cNQCbOcciTV\n5a5DrqyHC3RD5Bcn5EA0/5ISTCGQyEbJe45G8L+a5yRchn4ACVEztR2B/O5iOZbM\n.\n.\n.\n4ojOJPu0n5QLA5cI3RyZFw==\n=sx91\n-----END PGP PUBLIC KEY BLOCK-----\n")),Object(r.b)("p",null,"Now that you have the signature, you can configure Git to sign commits:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"git config --global user.signingkey A83C67A6D7F71756\n")),Object(r.b)("p",null,"Next, add your GPG key to your Git user."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Go to ",Object(r.b)("a",{parentName:"li",href:"https://github.com/IBM/cloud-pak-deployer.git"},"https://github.com/IBM/cloud-pak-deployer.git")),Object(r.b)("li",{parentName:"ul"},"Log in using your public GitHub user"),Object(r.b)("li",{parentName:"ul"},"Click on your user at the top right of the pages"),Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("strong",{parentName:"li"},"select")),Object(r.b)("li",{parentName:"ul"},"In the left menu, select ",Object(r.b)("strong",{parentName:"li"},"SSH and GPG keys")),Object(r.b)("li",{parentName:"ul"},"Click ",Object(r.b)("strong",{parentName:"li"},"New GPG key")),Object(r.b)("li",{parentName:"ul"},"Enter a meaningful title for your GPG key, for example: ",Object(r.b)("strong",{parentName:"li"},"FK Development Server")),Object(r.b)("li",{parentName:"ul"},"Paste the public GPG key"),Object(r.b)("li",{parentName:"ul"},"Confirm by pushing the ",Object(r.b)("strong",{parentName:"li"},"Add GPG key")," button")),Object(r.b)("p",null,"Commits done on your development server will now be signed with your user name and e-mail address and will show as ",Object(r.b)("strong",{parentName:"p"},"Verified")," when listing the commits."),Object(r.b)("h3",null,"Clone the repository"),Object(r.b)("p",null,"Clone the repository using a ",Object(r.b)("inlineCode",{parentName:"p"},"git")," command. The command below is the clone of the main Cloud Pak Deployer repository. If you have forked the repository to develop features, you will have to use the URL of your own fork."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"git clone https://github.com/IBM/cloud-pak-deployer.git\n")),Object(r.b)("h3",null,"Connect VSCode to the development server"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Install the ",Object(r.b)("strong",{parentName:"li"},"Remote - SSH")," extension in VSCode"),Object(r.b)("li",{parentName:"ul"},"Click on the green icon in the lower left of VSCode"),Object(r.b)("li",{parentName:"ul"},"Open SSH Config file, choose the one in your home directory"),Object(r.b)("li",{parentName:"ul"},"Add the following lines:")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"Host nickname_of_your_server\n   HostName ip_address_of_your_server\n   User fk-dev\n")),Object(r.b)("p",null,"Once you have set up this server in the SSH config file, you can connect to it and start remote development. "),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Open"),Object(r.b)("li",{parentName:"ul"},"Select the ",Object(r.b)("inlineCode",{parentName:"li"},"cloud-pak-deployer")," directory (this is the cloned repository)"),Object(r.b)("li",{parentName:"ul"},"As the directory is a cloned Git repo, VSCode will automatically open the default branch")),Object(r.b)("p",null,"From that point forward you can use VSCode as if you were working on your laptop, make changes and use a separate terminal to test your changes."),Object(r.b)("h2",null,"Cloud Pak Deployer developer command line option"),Object(r.b)("p",null,"The Cloud Pak Deployer runs as a container on the server. When youâ€™re in the process of developing new features, having to always rebuild the image is a bit of a pain, hence weâ€™ve introduced a special command line parameter."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"./cp-deploy.sh env apply .... --cpd-develop [--accept-all-liceneses]\n")),Object(r.b)("p",null,"When adding the ",Object(r.b)("inlineCode",{parentName:"p"},"--cpd-develop")," parameter to the command line, the current directory is mapped as a volume to the ",Object(r.b)("inlineCode",{parentName:"p"},"/cloud-pak-deployer")," directory within the container. This means that any latest changes youâ€™ve done to the Ansible playbooks or other commands will take effect immediately."),Object(r.b)(s,{kind:"warning",mdxType:"InlineNotification"},"Even though it is possible to run the deployer multiple times in parallel, for different environments, please be aware that is NOT possible when you use the `--cpd-develop` parameter. If you run two deploy processes with this parameters, you will see errors with permissions."),Object(r.b)("h2",null,"Cloud Pak Deployer developer container image tag"),Object(r.b)("p",null,"When working on multiple changes concurrently, you may have to switch between branches or tags. By default, the Cloud Pak Deployer image is built with image ",Object(r.b)("inlineCode",{parentName:"p"},"latest"),", but you can override this by setting the ",Object(r.b)("inlineCode",{parentName:"p"},"CPD_IMAGE_TAG")," environment variable in your session."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"export CPD_IMAGE_TAG=cp4d-460\n./cp-deploy.sh build\n")),Object(r.b)("p",null,"When building the deployer, the image is now tagged:"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"podman image ls\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-output"},"REPOSITORY                           TAG         IMAGE ID      CREATED        SIZE\nlocalhost/cloud-pak-deployer         cp4d-460    8b08cb2f9a2e  8 minutes ago  1.92 GB\n")),Object(r.b)("p",null,"When running the deployer with the same environment variable set, you will see an additional message in the output."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"./cp-deploy.sh env apply\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-output"},"Cloud Pak Deployer image tag cp4d-460 will be used.\n...\n")),Object(r.b)("h2",null,"Cloud Pak Deployer podman or docker command"),Object(r.b)("p",null,"By default, the ",Object(r.b)("inlineCode",{parentName:"p"},"cp-deploy.sh")," command detects if ",Object(r.b)("inlineCode",{parentName:"p"},"podman")," (preferred) or ",Object(r.b)("inlineCode",{parentName:"p"},"docker")," is found on the system. In case both are present, ",Object(r.b)("inlineCode",{parentName:"p"},"podman")," is used. You can override this behaviour by setting the ",Object(r.b)("inlineCode",{parentName:"p"},"CPD_CONTAINER_ENGINE")," environment variable."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"export CPD_CONTAINER_ENGINE=docker\n./cp-deploy.sh build\n")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-output"},"Container engine docker will be used.\n")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-development-deployer-development-setup-index-mdx-11e2828e8276daa0fbee.js.map