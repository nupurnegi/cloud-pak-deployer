{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./src/pages/cp-deploy/run/existing-openshift.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","name","_frontmatter","InlineNotification","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent","module","exports"],"mappings":"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","file":"component---src-pages-cp-deploy-run-existing-openshift-mdx-c49fa179bb7aff61b15b.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/cloud-pak-deployer/cloud-pak-deployer/doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Running the Cloud Pak Deployer on an existing OpenShift cluster`}</h1>\n    <p>{`When running the Cloud Pak Deployer on an existing OpenShift cluster, the following is assumed:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The OpenShift cluster is up and running with sufficient compute nodes`}</li>\n      <li parentName=\"ul\">{`The appropriate storage class(es) have been pre-created`}</li>\n      <li parentName=\"ul\">{`You have cluster administrator permissions to OpenShift`}</li>\n    </ul>\n    <p>{`With the `}<strong parentName=\"p\">{`Existing OpenShift`}</strong>{` type of deployment you can install and configure the Cloud Pak(s) both on connected and disconnected (air-gapped) cluster. When using the deployer for a disconnected cluster, make sure you specify `}<inlineCode parentName=\"p\">{`--air-gapped`}</inlineCode>{` for the `}<inlineCode parentName=\"p\">{`cp-deploy.sh`}</inlineCode>{` command.`}</p>\n    <h2>{`Acquire an IBM Cloud Pak Entitlement Key (connected cluster only)`}</h2>\n    <p>{`If you want to pull the Cloud Pak images from the entitled registry (i.e. an online install), or if you want to mirror the images to your private registry, you need to download the entitlement key. You can skip this step if you’re installing from a private registry and all Cloud Pak images have already been downloaded to the private registry.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Navigate to `}<a parentName=\"li\" {...{\n          \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n        }}>{`https://myibm.ibm.com/products-services/containerlibrary`}</a>{` and login with your IBMId credentials`}</li>\n      <li parentName=\"ul\">{`Select `}<strong parentName=\"li\">{`Get Entitlement Key`}</strong>{` and create a new key (or copy your existing key)`}</li>\n      <li parentName=\"ul\">{`Copy the key value`}</li>\n    </ul>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n  As stated for the API key, you can choose to download the entitlement key to a\n  file. However, when we reference the entitlement key, we mean the 80+\n  character string that is displayed, not the file.\n    </InlineNotification>\n    <h2>{`Prepare for running`}</h2>\n    <h3>{`Set environment variables`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`export CP_ENTITLEMENT_KEY=your_cp_entitlement_key\n`}</code></pre>\n    <p>{`Optional: Ensure that the environment variables for the configuration and status directories are set. If not specified, the directories are assumed to be `}<inlineCode parentName=\"p\">{`$HOME/cpd-config`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`$HOME/cpd-status`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export STATUS_DIR=$HOME/cpd-status\nexport CONFIG_DIR=$HOME/cpd-config\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CP_ENTITLEMENT_KEY`}</inlineCode>{`: This is the entitlement key you acquired as per the instructions above, this is a 80+ character string. `}<strong parentName=\"li\">{`You don’t need to set this environment variable when you do an air-gapped installation`}</strong></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`STATUS_DIR`}</inlineCode>{`: The directory where the Cloud Pak Deployer keeps all status information and logs files. `}<strong parentName=\"li\">{`Please note`}</strong>{` that if you have chosen to use a File Vault, the properties file is keps under the `}<inlineCode parentName=\"li\">{`vault`}</inlineCode>{` directory within the status directory`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`CONFIG_DIR`}</inlineCode>{`: Directory that holds the configuration, it must have `}<inlineCode parentName=\"li\">{`config`}</inlineCode>{` and optionally `}<inlineCode parentName=\"li\">{`defaults`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`inventory`}</inlineCode>{` subdirectories`}</li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n  Cloud Pak Deployer uses the status directory to logs its activities and also to keep track of its running state. For a given environment you're provisioning or destroying, you should always specify the same status directory to avoid contention between different deploy runs. You can run the Cloud Pak Deployer in parallel for different environments (different configuration directories).\n    </InlineNotification>\n    <h3>{`Store the OpenShift login command or configuration`}</h3>\n    <p>{`Because you will be deploying the Cloud Pak on an existing OpenShift cluster, the deployer needs to be able to access OpenShift. There are multiple methods for passing the login credentials of your OpenShift cluster(s) to the deployer process:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Generic `}<inlineCode parentName=\"li\">{`oc login`}</inlineCode>{` command`}</li>\n      <li parentName=\"ul\">{`Specific `}<inlineCode parentName=\"li\">{`oc login`}</inlineCode>{` command(s)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`kubeconfig`}</inlineCode>{` file`}</li>\n    </ul>\n    <p>{`Regardless of which authentication option you choose, the deployer will retrieve the secret from the vault when it requires access to OpenShift. If the secret cannot be found or if it is invalid or the OpenShift login token has expired, the deployer will fail and you will need to update the secret of your choice.`}</p>\n    <p>{`For most OpenShift installations, you can retrieve the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command with a temporary token from the OpenShift console. Go to the OpenShift console and click on your user at the top right of the page to get the login command. Typically this command looks something like this: `}<inlineCode parentName=\"p\">{`oc login --server=https://api.pluto-01.coc.ibm.com:6443 --token=sha256~NQUUMroU4B6q_GTBAMS18Y3EIba1KHnJ08L2rBHvTHA`}</inlineCode></p>\n    <p>{`Before passing the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command or the `}<inlineCode parentName=\"p\">{`kubeconfig`}</inlineCode>{` file, make sure you can login to your cluster using the command or the config file. If the cluster’s API server has a self-signed certificate, make sure you specify the `}<inlineCode parentName=\"p\">{`--insecure-skip-tls-verify`}</inlineCode>{` flag for the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command.`}</p>\n    <p>{`Example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc login api.pluto-01.coc.ibm.com:6443 -u kubeadmin -p BmxQ5-KjBFx-FgztG-gpTF3 --insecure-skip-tls-verify\n`}</code></pre>\n    <p>{`Output:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-output\"\n      }}>{`Login successful.\n\nYou have access to 65 projects, the list has been suppressed. You can list all projects with 'oc projects'\n\nUsing project \"default\".\n`}</code></pre>\n    <h4>{`Option 1: specify the generic `}<inlineCode parentName=\"h4\">{`oc login`}</inlineCode>{` command`}</h4>\n    <p>{`This is the most straightforward option if you only have 1 OpenShift cluster in your configuration.`}</p>\n    <p>{`Set the environment variable for the `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`export CPD_OC_LOGIN=\"oc login api.pluto-01.coc.ibm.com:6443 -u kubeadmin -p BmxQ5-KjBFx-FgztG-gpTF3 --insecure-skip-tls-verify\"\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n  Make sure you put the oc login command between quotes (single or double) to make sure the full command is stored.\n    </InlineNotification>\n    <p>{`When the deployer is run, it automatically sets the `}<inlineCode parentName=\"p\">{`oc-login`}</inlineCode>{` vault secret to the specified `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` command. When logging in to OpenShift, the deployer first checks if there is a specific `}<inlineCode parentName=\"p\">{`oc login`}</inlineCode>{` secret for the cluster in question (see option 2). If there is not, it will default to the generic `}<inlineCode parentName=\"p\">{`oc-login`}</inlineCode>{` secret (option 1).`}</p>\n    <h4>{`Option 2: store the specific `}<inlineCode parentName=\"h4\">{`oc login`}</inlineCode>{` command(s)`}</h4>\n    <p>{`Use this option if you have multiple OpenShift clusters configured in th deployer configuration.`}</p>\n    <p>{`Store the login command in secret `}<inlineCode parentName=\"p\">{`<cluster name>-oc-login`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh vault set \\\\\n  -vs pluto-01-oc-login \\\\\n  -vsv \"oc login api.pluto-01.coc.ibm.com:6443 -u kubeadmin -p BmxQ5-KjBFx-FgztG-gpTF3 --insecure-skip-tls-verify\"\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n  Make sure you put the oc login command between quotes (single or double) to make sure the full command is stored.\n    </InlineNotification>\n    <h4>{`Option 3: store the kubeconfig file`}</h4>\n    <p>{`If you already have a “kubeconfig” file that holds the credentials of your cluster, you can use this, otherwise:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Log in to OpenShift as a cluster administrator using your method of choice`}</li>\n      <li parentName=\"ul\">{`Locate the Kubernetes config file. If you have logged in with the OpenShift client, this is typically `}<inlineCode parentName=\"li\">{`~/.kube/config`}</inlineCode></li>\n    </ul>\n    <p>{`If you did not just login to the cluster, the current context of the kubeconfig file may not point to your cluster. The deployer will check that the server the current context points to matches the `}<inlineCode parentName=\"p\">{`cluster_name`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`domain_name`}</inlineCode>{` of the configured `}<inlineCode parentName=\"p\">{`openshift`}</inlineCode>{` object. To check the current context, run the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`oc config current-context\n`}</code></pre>\n    <p>{`Now, store the Kubernetes config file as a vault secret.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh vault set \\\\\n    --vault-secret kubeconfig \\\\\n    --vault-secret-file ~/.kube/config\n`}</code></pre>\n    <p>{`If the deployer manages multiple OpenShift clusters, you can specify a kubeconfig file for each of the clusters by prefixing the `}<inlineCode parentName=\"p\">{`kubeconfig`}</inlineCode>{` with the name of the `}<inlineCode parentName=\"p\">{`openshift`}</inlineCode>{` object, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh vault set \\\\\n    --vault-secret pluto-01-kubeconfig \\\\\n    --vault-secret-file /data/pluto-01/kubeconfig\n\n./cp-deploy.sh vault set \\\\\n    --vault-secret venus-02-kubeconfig \\\\\n    --vault-secret-file /data/venus-02/kubeconfig\n`}</code></pre>\n    <p>{`When connecting to the OpenShift cluster, a cluster-specific kubeconfig vault secret will take precedence over the generic `}<inlineCode parentName=\"p\">{`kubeconfig`}</inlineCode>{` secret.`}</p>\n    <h2>{`Optional: validate the configuration`}</h2>\n    <p>{`If you only want to validate the configuration, you can run the dpeloyer with the `}<inlineCode parentName=\"p\">{`--check-only`}</inlineCode>{` argument. This will run the first stage to validate variables and vault secrets and then execute the generators.`}</p>\n    <p>{`If the cluster is air-gapped, make sure you add the `}<inlineCode parentName=\"p\">{`--air-gapped`}</inlineCode>{` flag`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh env apply -e env_id=pluto-01 --check-only [--accept-all-licenses]\n`}</code></pre>\n    <h2>{`Run the Cloud Pak Deployer`}</h2>\n    <p>{`To run the container using a local configuration input directory and a data directory where temporary and state is kept, use the example below. If you don’t specify the status directory, the deployer will automatically create a temporary directory. Please note that the status directory will also hold secrets if you have configured a flat file vault. If you lose the directory, you will not be able to make changes to the configuration and adjust the deployment. It is best to specify a permanent directory that you can reuse later. If you specify an existing directory the current user `}<strong parentName=\"p\">{`must`}</strong>{` be the owner of the directory. Failing to do so may cause the container to fail with insufficient permissions.`}</p>\n    <p>{`If the cluster is air-gapped, make sure you add the `}<inlineCode parentName=\"p\">{`--air-gapped`}</inlineCode>{` flag`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh env apply [--accept-all-licenses]\n`}</code></pre>\n    <p>{`If you have chosen to use dynamic properties (extra variables), you can specify these on the command line, see below. Extra variables are covered in `}<a parentName=\"p\" {...{\n        \"href\": \"/cloud-pak-deployer/advanced/advanced-configuration\"\n      }}>{`advanced configuration`}</a>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh env apply -e env_id=pluto-01 [--accept-all-licenses]\n`}</code></pre>\n    <p>{`In the above command, the `}<inlineCode parentName=\"p\">{`env_id`}</inlineCode>{` extra variable defines the names of the objects that are being created; these are referenced in the `}<inlineCode parentName=\"p\">{`.yaml`}</inlineCode>{` configuration files as `}<inlineCode parentName=\"p\">{`{{ env_id }}`}</inlineCode>{`. For more information about the extra (dynamic) variables, see `}<a parentName=\"p\" {...{\n        \"href\": \"/cloud-pak-deployer/advanced/advanced-configuration\"\n      }}>{`advanced configuration`}</a>{`.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`--accept-all-licenses`}</inlineCode>{` flag is optional and confirms that you accept all licenses of the installed cartridges and instances. Licenses must be either accepted in the configuration files or at the command line.`}</p>\n    <p>{`When running the command, the container will start as a daemon and the command will tail-follow the logs. You can press Ctrl-C at any time to interrupt the logging but the container will continue to run in the background.`}</p>\n    <p>{`You can return to view the logs as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh env logs\n`}</code></pre>\n    <p>{`Preparing OpenShift and installing the Cloud Pak will take a long time, typically between 1-5 hours, dependent on which Cloud Pak cartridges you configured. For estimated duration of the steps, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"/cloud-pak-deployer/cpd-design/timings\"\n      }}>{`Timings`}</a>{`.`}</p>\n    <p>{`If you need to interrupt the automation, use CTRL-C to stop the logging output and then use:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh env kill\n`}</code></pre>\n    <h2>{`On failure`}</h2>\n    <p>{`If the Cloud Pak Deployer fails, for example because certain infrastructure components are temporarily not available, fix the cause if needed and then just re-run it with the same `}<inlineCode parentName=\"p\">{`CONFIG_DIR`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`STATUS_DIR`}</inlineCode>{` as well extra variables. The provisioning process has been designed to be idempotent and it will not redo actions that have already completed successfully.`}</p>\n    <h2>{`Finishing up`}</h2>\n    <p>{`Once the process has finished, it will output the URLs by which you can access the deployed Cloud Pak. You can also find this information under the `}<inlineCode parentName=\"p\">{`cloud-paks`}</inlineCode>{` directory in the status directory you specified.`}</p>\n    <p>{`To retrieve the Cloud Pak URL(s):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cat $STATUS_DIR/cloud-paks/*\n`}</code></pre>\n    <p>{`This will show the Cloud Pak URLs:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-output\"\n      }}>{`Cloud Pak for Data URL for cluster pluto-01 and project zen-40:\nhttps://cpd-zen-40.apps.pluto-01.example.com\n`}</code></pre>\n    <p>{`List the secrets in the vault:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh vault list\n`}</code></pre>\n    <p>{`This will show something similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-output\"\n      }}>{`Secret list for group sample:\n- ibm_cp_entitlement_key\n- pluto-01-oc-login\n- cp4d_admin_zen_sample_sample\n`}</code></pre>\n    <p>{`You can then retrieve the Cloud Pak for Data admin password like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./cp-deploy.sh vault get --vault-secret cp4d_admin_zen_sample_sample\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-output\"\n      }}>{`PLAY [Secrets] *****************************************************************\nincluded: /cloud-pak-deployer/automation-roles/99-generic/vault/vault-get-secret/tasks/get-secret-file.yml for localhost\ncp4d_admin_zen_sample_sample: gelGKrcgaLatBsnAdMEbmLwGr\n`}</code></pre>\n    <h2>{`Post-install configuration`}</h2>\n    <p>{`You can find examples of a couple of typical changes you may want to do here: `}<a parentName=\"p\" {...{\n        \"href\": \"/cloud-pak-deployer/cp-deploy/post-run\"\n      }}>{`Post-run changes`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};"],"sourceRoot":""}