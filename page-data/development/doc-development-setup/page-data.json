{"componentChunkName":"component---src-pages-development-doc-development-setup-mdx","path":"/development/doc-development-setup/","result":{"pageContext":{"frontmatter":{"title":"Development","tabs":["Deployer Development Setup","Doc Development Setup","Doc Guidelines"]},"relativePagePath":"/development/doc-development-setup.mdx","titleType":"page","MdxNode":{"id":"2a2bbacc-4526-5ae3-9a1a-641b57344ac4","children":[],"parent":"260f40b4-9cf0-59ad-9eba-bfe55b647d7e","internal":{"content":"---\ntitle: Development\ntabs: ['Deployer Development Setup', 'Doc Development Setup', 'Doc Guidelines']\n---\n\n# Documentation Development Setup\n\nGatsby themes encapsulate all of the configuration and implementation details of Gatsby websites. This GitHub repository has been built with a dependancy on the gatsby-theme-carbon package. The primary goal of gatsby-theme-carbon is to get content authors speaking the IBM Design Language with Carbon as soon as possible. This GiHub repository is connected to Travis any commit will cause a build of the GitHub pages to be triggered. A better way of working is to use the tooling from a loacal system\n\n## Local tooling installation\nIf you want to test the documentation pages you're developing, it is best to run Gatsby in a container and map your local doc folder to a folder inside the container. This avoids having to install nvm and many modules on your workstation.\n\nDo the following:\n* Make sure you have cloned this repository to your workstation\n* Install Docker on your workstation\n* Start from the main directory of the cloud-pak-deployer repository\n```\ncd doc\ndocker build -t cpd-doc .\n```\n\nThis will build a CentOS image with `nvm` and the required Node.js modules already installed. It will take ~5-10 minutes to complete this step, dependent on your network bandwidth.\n\n## Running the docker image\n```\ndocker run --name cpd-doc -d -p 8000:8000 -v $PWD:/doc cpd-doc:latest\n```\n\nThis will start the docker container as a daemon. You can monitor its progress by tailing the logs.\n\n```\ndocker logs -f cpd-doc \n```\n\nIt will take approximately 10 minutes to install all Node.js packages into the `node_modules` directory, this is only the first time. The `node_modules` directory is ignored by Git so it will no be synchronized with the upstream repository. Next time you start the container, it should take less than 1 minute.\n\nOnce finished, you will see the following message:\n```output\n✖ 6 problems (0 errors, 6 warnings)\n\nsuccess Building development bundle - 369.543s\n```\n\nWhenever you save changes to a document, the logs will show something:\n```output\ninfo changed file at /doc/src/pages/tools/development-setup.mdx\nsuccess building schema - 0.634s\ninfo Total nodes: 147, SitePage nodes: 17 (use --verbose for breakdown)\nsuccess createPages - 0.004s\nsuccess Checking for changed pages - 0.001s\nsuccess update schema - 0.047s\nsuccess onPreExtractQueries - 0.001s\nsuccess extract queries from components - 0.624s\n...\nsuccess Re-building development bundle - 2.436s\n```\n\n## Starting the browswer\nOnce you the container has fully started, it automatically tracks all changes in under the `doc` folder and updates the pages site automatically. You can view the site by opening a browswer for URL:\n\nhttp://localhost:8000\n\n## Stopping the docker container\nIf you don't want to test your changes locally anymore, stop the docker container.\n```\ndocker kill cpd-doc\n```\n\nNext time you want to test your changes, you only have to run:\n```\ndocker start cpd-doc\n```\n\n## Removing the docker container and image\nIf you want to remove all from your workstation, do the following:\n```\ndocker rm -f cpd-doc\ndocker rmi -f cpd-doc:latest\n```\n\nNote that after pushing your updated documentation, a request will be sent to a Travis job that will rebuild the pages site. The Travis job can be followed at https://travis.ibm.com, you can login to follow the build using your github credentials. \n","type":"Mdx","contentDigest":"64eddfc60ab582f472025868a7816ce0","owner":"gatsby-plugin-mdx","counter":189},"frontmatter":{"title":"Development","tabs":["Deployer Development Setup","Doc Development Setup","Doc Guidelines"]},"exports":{},"rawBody":"---\ntitle: Development\ntabs: ['Deployer Development Setup', 'Doc Development Setup', 'Doc Guidelines']\n---\n\n# Documentation Development Setup\n\nGatsby themes encapsulate all of the configuration and implementation details of Gatsby websites. This GitHub repository has been built with a dependancy on the gatsby-theme-carbon package. The primary goal of gatsby-theme-carbon is to get content authors speaking the IBM Design Language with Carbon as soon as possible. This GiHub repository is connected to Travis any commit will cause a build of the GitHub pages to be triggered. A better way of working is to use the tooling from a loacal system\n\n## Local tooling installation\nIf you want to test the documentation pages you're developing, it is best to run Gatsby in a container and map your local doc folder to a folder inside the container. This avoids having to install nvm and many modules on your workstation.\n\nDo the following:\n* Make sure you have cloned this repository to your workstation\n* Install Docker on your workstation\n* Start from the main directory of the cloud-pak-deployer repository\n```\ncd doc\ndocker build -t cpd-doc .\n```\n\nThis will build a CentOS image with `nvm` and the required Node.js modules already installed. It will take ~5-10 minutes to complete this step, dependent on your network bandwidth.\n\n## Running the docker image\n```\ndocker run --name cpd-doc -d -p 8000:8000 -v $PWD:/doc cpd-doc:latest\n```\n\nThis will start the docker container as a daemon. You can monitor its progress by tailing the logs.\n\n```\ndocker logs -f cpd-doc \n```\n\nIt will take approximately 10 minutes to install all Node.js packages into the `node_modules` directory, this is only the first time. The `node_modules` directory is ignored by Git so it will no be synchronized with the upstream repository. Next time you start the container, it should take less than 1 minute.\n\nOnce finished, you will see the following message:\n```output\n✖ 6 problems (0 errors, 6 warnings)\n\nsuccess Building development bundle - 369.543s\n```\n\nWhenever you save changes to a document, the logs will show something:\n```output\ninfo changed file at /doc/src/pages/tools/development-setup.mdx\nsuccess building schema - 0.634s\ninfo Total nodes: 147, SitePage nodes: 17 (use --verbose for breakdown)\nsuccess createPages - 0.004s\nsuccess Checking for changed pages - 0.001s\nsuccess update schema - 0.047s\nsuccess onPreExtractQueries - 0.001s\nsuccess extract queries from components - 0.624s\n...\nsuccess Re-building development bundle - 2.436s\n```\n\n## Starting the browswer\nOnce you the container has fully started, it automatically tracks all changes in under the `doc` folder and updates the pages site automatically. You can view the site by opening a browswer for URL:\n\nhttp://localhost:8000\n\n## Stopping the docker container\nIf you don't want to test your changes locally anymore, stop the docker container.\n```\ndocker kill cpd-doc\n```\n\nNext time you want to test your changes, you only have to run:\n```\ndocker start cpd-doc\n```\n\n## Removing the docker container and image\nIf you want to remove all from your workstation, do the following:\n```\ndocker rm -f cpd-doc\ndocker rmi -f cpd-doc:latest\n```\n\nNote that after pushing your updated documentation, a request will be sent to a Travis job that will rebuild the pages site. The Travis job can be followed at https://travis.ibm.com, you can login to follow the build using your github credentials. \n","fileAbsolutePath":"/home/runner/work/cloud-pak-deployer/cloud-pak-deployer/doc/src/pages/development/doc-development-setup.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}