{"componentChunkName":"component---src-pages-advanced-run-on-openshift-index-mdx","path":"/advanced/run-on-openshift/","result":{"pageContext":{"frontmatter":{"description":"Advanced / Run On Openshift","title":"Advanced / Run On Openshift"},"relativePagePath":"/advanced/run-on-openshift/index.mdx","titleType":"page","MdxNode":{"id":"1f1ae065-148e-58a3-ac01-312893a97df9","children":[],"parent":"98036287-1fb1-5b7d-b4f0-ee546a34ffbe","internal":{"content":"# Running deployer as a pod for existing OpenShift cluster\n\n## Collect cluster credentials\n* Cluster: ...\n* OpenShift admin user: `kubeadmin`\n* Password: ...\n\n## Login to cluster\n```\noc login ... --insecure-skip-tls-verify\n```\n\nKeep the login command, you will need it later to set the vault secret the deployer will use.\n\n## Create configuration\n```\nexport CONFIG_DIR=$HOME/cpd-config && mkdir -p $CONFIG_DIR/config\n\ncat << EOF > $CONFIG_DIR/config/cpd-config.yaml\n---\nglobal_config:\n  environment_name: demo\n  cloud_platform: existing-ocp\n\nopenshift:\n- name: cpd-demo\n  ocp_version: \"4.10\"\n  cluster_name: cpd-demo\n  domain_name: example.com\n  openshift_storage:\n  - storage_name: nfs-storage\n    storage_type: nfs\n\ncp4d:\n- project: cpd-instance\n  openshift_cluster_name: cpd-demo\n  cp4d_version: 4.6.0\n  sequential_install: True\n  accept_licenses: True\n  cartridges:\n  - name: cp-foundation\n    license_service:\n      state: disabled\n      threads_per_core: 2\n  - name: lite\n\n#\n# All tested cartridges. To install, change the \"state\" property to \"installed\". To uninstall, change the state\n# to \"removed\" or comment out the entire cartridge. Make sure that the \"-\" and properties are aligned with the lite\n# cartridge; the \"-\" is at position 3 and the property starts at position 5.\n#\n\n  - name: analyticsengine \n    size: small \n    state: removed\n\n  - name: bigsql\n    state: removed\n\n  - name: ca\n    size: small\n    instances:\n    - name: ca-instance\n      metastore_ref: ca-metastore\n    state: removed\n\n  - name: cde\n    state: removed\n\n  - name: datagate\n    state: removed\n\n  - name: datastage-ent-plus\n    state: removed\n    # instances:\n    #   - name: ds-instance\n    #     # Optional settings\n    #     description: \"datastage ds-instance\"\n    #     size: medium\n    #     storage_class: efs-nfs-client\n    #     storage_size_gb: 60\n    #     # Custom Scale options\n    #     scale_px_runtime:\n    #       replicas: 2\n    #       cpu_request: 500m\n    #       cpu_limit: 2\n    #       memory_request: 2Gi\n    #       memory_limit: 4Gi\n    #     scale_px_compute:\n    #       replicas: 2\n    #       cpu_request: 1\n    #       cpu_limit: 3\n    #       memory_request: 4Gi\n    #       memory_limit: 12Gi    \n\n  - name: db2\n    size: small\n    instances:\n    - name: ca-metastore\n      metadata_size_gb: 20\n      data_size_gb: 20\n      backup_size_gb: 20  \n      transactionlog_size_gb: 20\n    state: removed\n\n  - name: db2wh\n    state: removed\n\n  - name: dmc\n    state: removed\n\n  - name: dods\n    size: small\n    state: removed\n\n  - name: dp\n    size: small\n    state: removed\n\n  - name: dv\n    size: small \n    instances:\n    - name: data-virtualization\n    state: removed\n\n  - name: hadoop\n    size: small\n    state: removed\n\n  - name: mdm\n    size: small\n    wkc_enabled: true\n    state: removed\n\n  - name: openpages\n    state: removed\n\n  - name: planning-analytics\n    state: removed\n\n  - name: rstudio\n    size: small\n    state: removed\n\n  - name: spss\n    state: removed\n\n  - name: voice-gateway\n    replicas: 1\n    state: removed\n\n  - name: watson-assistant\n    size: small\n    state: removed\n\n  - name: watson-discovery\n    state: removed\n\n  - name: watson-ks\n    size: small\n    state: removed\n\n  - name: watson-openscale\n    size: small\n    state: removed\n\n  - name: watson-speech\n    stt_size: xsmall\n    tts_size: xsmall\n    state: removed\n\n  - name: wkc\n    size: small\n    state: removed\n\n  - name: wml\n    size: small\n    state: installed\n\n  - name: wml-accelerator\n    replicas: 1\n    size: small\n    state: removed\n\n  - name: wsl\n    state: installed\n\nEOF\n```\n\n## Prepare the deployer project\n```\noc new-project cloud-pak-deployer \n\noc project cloud-pak-deployer\noc create serviceaccount cloud-pak-deployer-sa\noc adm policy add-scc-to-user privileged -z cloud-pak-deployer-sa\noc adm policy add-cluster-role-to-user cluster-admin -z cloud-pak-deployer-sa\n```\n\n## Build deployer image and push to the internal registry\nBuilding the deployer image typically takes ~5 minutes. Only do this if the image has not been built yet.\n\n```\nif ! oc get istag -n cloud-pak-deployer cloud-pak-deployer:latest --no-headers 2> /dev/null;then \n\ncat << EOF | oc apply -f -\napiVersion: image.openshift.io/v1\nkind: ImageStream\nmetadata:\n  name: cloud-pak-deployer\nspec:\n  lookupPolicy:\n    local: true\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: build.openshift.io/v1\nkind: BuildConfig\nmetadata:\n  name: cloud-pak-deployer-bc\n  namespace: cloud-pak-deployer\nspec:\n  source:\n    type: Git\n    git:\n      uri: https://github.com/IBM/cloud-pak-deployer\n      ref: main\n  strategy:\n    type: Docker                      \n  output:\n    to:\n      kind: ImageStreamTag\n      name: cloud-pak-deployer:latest\nEOF\n\n  oc delete build -n cloud-pak-deployer -l buildconfig=cloud-pak-deployer-bc\n  oc start-build -n cloud-pak-deployer bc/cloud-pak-deployer-bc\n\necho \"Wait for image to be built and pushed to internal registry...\"\nwhile ! oc get istag -n cloud-pak-deployer cloud-pak-deployer:latest 2>/dev/null;do\n  sleep 1\ndone\n\nfi\n```\n\n## Set configuration\n```\noc create cm -n cloud-pak-deployer cloud-pak-deployer-config\noc set data -n cloud-pak-deployer cm/cloud-pak-deployer-config \\\n  --from-file=$CONFIG_DIR/config\n```\n  \n## Start the deployer job\n```\nexport DEPLOYER_SC=your_storage_class\nexport CP_ENTITLEMENT_KEY=your_entitlement_key\n\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: ${DEPLOYER_SC}\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: cloud-pak-deployer\n  name: cloud-pak-deployer\n  namespace: cloud-pak-deployer\nspec:\n  parallelism: 1\n  completions: 1\n  backoffLimit: 0\n  template:\n    metadata:\n      name: cloud-pak-deployer\n      labels:\n        app: cloud-pak-deployer\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CP_ENTITLEMENT_KEY\n          value: ${CP_ENTITLEMENT_KEY}\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config/config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: [\"/bin/sh\",\"-xc\"]\n        args: \n          - /cloud-pak-deployer/cp-deploy.sh env apply -v\n      restartPolicy: Never\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        configMap:\n          name: cloud-pak-deployer-config\n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \nEOF\n```\n\n## Follow the logs of the deployment\n```\noc logs -f -n cloud-pak-deployer job/cloud-pak-deployer\n```\n\nIn some cases, especially if the OpenShift cluster is remote from 2where the `oc` command is running, the `oc logs -f` command may terminate abruptly. ","type":"Mdx","contentDigest":"515f76ca01fd180b1b6688a15a9e5172","owner":"gatsby-plugin-mdx","counter":216},"frontmatter":{"description":"Advanced / Run On Openshift","title":"Advanced / Run On Openshift"},"exports":{},"rawBody":"# Running deployer as a pod for existing OpenShift cluster\n\n## Collect cluster credentials\n* Cluster: ...\n* OpenShift admin user: `kubeadmin`\n* Password: ...\n\n## Login to cluster\n```\noc login ... --insecure-skip-tls-verify\n```\n\nKeep the login command, you will need it later to set the vault secret the deployer will use.\n\n## Create configuration\n```\nexport CONFIG_DIR=$HOME/cpd-config && mkdir -p $CONFIG_DIR/config\n\ncat << EOF > $CONFIG_DIR/config/cpd-config.yaml\n---\nglobal_config:\n  environment_name: demo\n  cloud_platform: existing-ocp\n\nopenshift:\n- name: cpd-demo\n  ocp_version: \"4.10\"\n  cluster_name: cpd-demo\n  domain_name: example.com\n  openshift_storage:\n  - storage_name: nfs-storage\n    storage_type: nfs\n\ncp4d:\n- project: cpd-instance\n  openshift_cluster_name: cpd-demo\n  cp4d_version: 4.6.0\n  sequential_install: True\n  accept_licenses: True\n  cartridges:\n  - name: cp-foundation\n    license_service:\n      state: disabled\n      threads_per_core: 2\n  - name: lite\n\n#\n# All tested cartridges. To install, change the \"state\" property to \"installed\". To uninstall, change the state\n# to \"removed\" or comment out the entire cartridge. Make sure that the \"-\" and properties are aligned with the lite\n# cartridge; the \"-\" is at position 3 and the property starts at position 5.\n#\n\n  - name: analyticsengine \n    size: small \n    state: removed\n\n  - name: bigsql\n    state: removed\n\n  - name: ca\n    size: small\n    instances:\n    - name: ca-instance\n      metastore_ref: ca-metastore\n    state: removed\n\n  - name: cde\n    state: removed\n\n  - name: datagate\n    state: removed\n\n  - name: datastage-ent-plus\n    state: removed\n    # instances:\n    #   - name: ds-instance\n    #     # Optional settings\n    #     description: \"datastage ds-instance\"\n    #     size: medium\n    #     storage_class: efs-nfs-client\n    #     storage_size_gb: 60\n    #     # Custom Scale options\n    #     scale_px_runtime:\n    #       replicas: 2\n    #       cpu_request: 500m\n    #       cpu_limit: 2\n    #       memory_request: 2Gi\n    #       memory_limit: 4Gi\n    #     scale_px_compute:\n    #       replicas: 2\n    #       cpu_request: 1\n    #       cpu_limit: 3\n    #       memory_request: 4Gi\n    #       memory_limit: 12Gi    \n\n  - name: db2\n    size: small\n    instances:\n    - name: ca-metastore\n      metadata_size_gb: 20\n      data_size_gb: 20\n      backup_size_gb: 20  \n      transactionlog_size_gb: 20\n    state: removed\n\n  - name: db2wh\n    state: removed\n\n  - name: dmc\n    state: removed\n\n  - name: dods\n    size: small\n    state: removed\n\n  - name: dp\n    size: small\n    state: removed\n\n  - name: dv\n    size: small \n    instances:\n    - name: data-virtualization\n    state: removed\n\n  - name: hadoop\n    size: small\n    state: removed\n\n  - name: mdm\n    size: small\n    wkc_enabled: true\n    state: removed\n\n  - name: openpages\n    state: removed\n\n  - name: planning-analytics\n    state: removed\n\n  - name: rstudio\n    size: small\n    state: removed\n\n  - name: spss\n    state: removed\n\n  - name: voice-gateway\n    replicas: 1\n    state: removed\n\n  - name: watson-assistant\n    size: small\n    state: removed\n\n  - name: watson-discovery\n    state: removed\n\n  - name: watson-ks\n    size: small\n    state: removed\n\n  - name: watson-openscale\n    size: small\n    state: removed\n\n  - name: watson-speech\n    stt_size: xsmall\n    tts_size: xsmall\n    state: removed\n\n  - name: wkc\n    size: small\n    state: removed\n\n  - name: wml\n    size: small\n    state: installed\n\n  - name: wml-accelerator\n    replicas: 1\n    size: small\n    state: removed\n\n  - name: wsl\n    state: installed\n\nEOF\n```\n\n## Prepare the deployer project\n```\noc new-project cloud-pak-deployer \n\noc project cloud-pak-deployer\noc create serviceaccount cloud-pak-deployer-sa\noc adm policy add-scc-to-user privileged -z cloud-pak-deployer-sa\noc adm policy add-cluster-role-to-user cluster-admin -z cloud-pak-deployer-sa\n```\n\n## Build deployer image and push to the internal registry\nBuilding the deployer image typically takes ~5 minutes. Only do this if the image has not been built yet.\n\n```\nif ! oc get istag -n cloud-pak-deployer cloud-pak-deployer:latest --no-headers 2> /dev/null;then \n\ncat << EOF | oc apply -f -\napiVersion: image.openshift.io/v1\nkind: ImageStream\nmetadata:\n  name: cloud-pak-deployer\nspec:\n  lookupPolicy:\n    local: true\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: build.openshift.io/v1\nkind: BuildConfig\nmetadata:\n  name: cloud-pak-deployer-bc\n  namespace: cloud-pak-deployer\nspec:\n  source:\n    type: Git\n    git:\n      uri: https://github.com/IBM/cloud-pak-deployer\n      ref: main\n  strategy:\n    type: Docker                      \n  output:\n    to:\n      kind: ImageStreamTag\n      name: cloud-pak-deployer:latest\nEOF\n\n  oc delete build -n cloud-pak-deployer -l buildconfig=cloud-pak-deployer-bc\n  oc start-build -n cloud-pak-deployer bc/cloud-pak-deployer-bc\n\necho \"Wait for image to be built and pushed to internal registry...\"\nwhile ! oc get istag -n cloud-pak-deployer cloud-pak-deployer:latest 2>/dev/null;do\n  sleep 1\ndone\n\nfi\n```\n\n## Set configuration\n```\noc create cm -n cloud-pak-deployer cloud-pak-deployer-config\noc set data -n cloud-pak-deployer cm/cloud-pak-deployer-config \\\n  --from-file=$CONFIG_DIR/config\n```\n  \n## Start the deployer job\n```\nexport DEPLOYER_SC=your_storage_class\nexport CP_ENTITLEMENT_KEY=your_entitlement_key\n\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\n  storageClassName: ${DEPLOYER_SC}\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: batch/v1\nkind: Job\nmetadata:\n  labels:\n    app: cloud-pak-deployer\n  name: cloud-pak-deployer\n  namespace: cloud-pak-deployer\nspec:\n  parallelism: 1\n  completions: 1\n  backoffLimit: 0\n  template:\n    metadata:\n      name: cloud-pak-deployer\n      labels:\n        app: cloud-pak-deployer\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CP_ENTITLEMENT_KEY\n          value: ${CP_ENTITLEMENT_KEY}\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config/config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: [\"/bin/sh\",\"-xc\"]\n        args: \n          - /cloud-pak-deployer/cp-deploy.sh env apply -v\n      restartPolicy: Never\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        configMap:\n          name: cloud-pak-deployer-config\n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \nEOF\n```\n\n## Follow the logs of the deployment\n```\noc logs -f -n cloud-pak-deployer job/cloud-pak-deployer\n```\n\nIn some cases, especially if the OpenShift cluster is remote from 2where the `oc` command is running, the `oc logs -f` command may terminate abruptly. ","fileAbsolutePath":"/home/runner/work/cloud-pak-deployer/cloud-pak-deployer/doc/src/pages/advanced/run-on-openshift/index.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}