{"componentChunkName":"component---src-pages-advanced-run-on-openshift-run-deployer-wizard-on-openshift-mdx","path":"/advanced/run-on-openshift/run-deployer-wizard-on-openshift/","result":{"pageContext":{"frontmatter":{"title":"Running deployer wizard as a pod for existing OpenShift cluster","tabs":["Run deployer on OpenShift","Run deployer wizard on OpenShift"]},"relativePagePath":"/advanced/run-on-openshift/run-deployer-wizard-on-openshift.mdx","titleType":"page","MdxNode":{"id":"e67cd316-f90c-513d-bd83-35da675a4f3d","children":[],"parent":"227ab216-fd95-507f-a673-7c1e483a3f57","internal":{"content":"---\ntitle: Running deployer wizard as a pod for existing OpenShift cluster\ntabs:\n  [\n    \"Run deployer on OpenShift\",\n    \"Run deployer wizard on OpenShift\",\n  ]\n---\n# Running deployer wizard as a pod for existing OpenShift cluster\n\n## Log in to the OpenShift cluster\nLog is as a cluster administrator to be able to run the deployer with the correct permissions.\n\n## Prepare the deployer project\n```\noc new-project cloud-pak-deployer \n\noc project cloud-pak-deployer\noc create serviceaccount cloud-pak-deployer-sa\noc adm policy add-scc-to-user privileged -z cloud-pak-deployer-sa\noc adm policy add-cluster-role-to-user cluster-admin -z cloud-pak-deployer-sa\n```\n\n## Build deployer image and push to the internal registry\nBuilding the deployer image typically takes ~5 minutes. Only do this if the image has not been built yet.\n```\ncat << EOF | oc apply -f -\napiVersion: image.openshift.io/v1\nkind: ImageStream\nmetadata:\n  name: cloud-pak-deployer\nspec:\n  lookupPolicy:\n    local: true\nEOF\n\ncat << EOF | oc create -f -\nkind: Build\napiVersion: build.openshift.io/v1\nmetadata:\n  generateName: cloud-pak-deployer-bc-\n  namespace: cloud-pak-deployer\nspec:\n  serviceAccount: builder\n  source:\n    type: Git\n    git:\n      uri: 'https://github.com/IBM/cloud-pak-deployer'\n      ref: main\n  strategy:\n    type: Docker\n    dockerStrategy: {}\n  output:\n    to:\n      kind: ImageStreamTag\n      name: 'cloud-pak-deployer:latest'\n  triggeredBy:\n    - message: Manually triggered\nEOF\n```\n\nNow, wait until the deployer image has been built.\n```\noc get build -n cloud-pak-deployer -w\n```\n\n## Start the deployer wizard\n```\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-config\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cloud-pak-deployer-wizard\n  namespace: cloud-pak-deployer\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cloud-pak-deployer-wizard\n  template:\n    metadata:\n      name: cloud-pak-deployer-wizard\n      labels:\n        app: cloud-pak-deployer-wizard\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CPD_WIZARD_PAGE_TITLE\n          value: \"Cloud Pak Deployer\"\n#        - name: CPD_WIZARD_MODE\n#          value: existing-ocp\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: [\"/bin/sh\",\"-xc\"]\n        args: \n          - mkdir -p /Data/cpd-config/config && /cloud-pak-deployer/cp-deploy.sh env wizard -v\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-config   \n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \nEOF\n```\n\n## Expose the service and create the route\n```\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  name: cloud-pak-deployer-wizard-svc\n  namespace: cloud-pak-deployer    \nspec:\n  selector:                  \n    app: cloud-pak-deployer-wizard\n  ports:\n  - nodePort: 0\n    port: 8080            \n    protocol: TCP\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: route.openshift.io/v1\nkind: Route\nmetadata:\n  name: cloud-pak-deployer-wizard\nspec:\n  tls:\n    termination: edge\n  to:\n    kind: Service\n    name: cloud-pak-deployer-wizard-svc\n    weight: null\nEOF\n```\n\nNow you can access the deployer wizard using the route created in teh `cloud-pak-deployer` project.","type":"Mdx","contentDigest":"2abad0064c4f879eee6098311e393122","owner":"gatsby-plugin-mdx","counter":218},"frontmatter":{"title":"Running deployer wizard as a pod for existing OpenShift cluster","tabs":["Run deployer on OpenShift","Run deployer wizard on OpenShift"]},"exports":{},"rawBody":"---\ntitle: Running deployer wizard as a pod for existing OpenShift cluster\ntabs:\n  [\n    \"Run deployer on OpenShift\",\n    \"Run deployer wizard on OpenShift\",\n  ]\n---\n# Running deployer wizard as a pod for existing OpenShift cluster\n\n## Log in to the OpenShift cluster\nLog is as a cluster administrator to be able to run the deployer with the correct permissions.\n\n## Prepare the deployer project\n```\noc new-project cloud-pak-deployer \n\noc project cloud-pak-deployer\noc create serviceaccount cloud-pak-deployer-sa\noc adm policy add-scc-to-user privileged -z cloud-pak-deployer-sa\noc adm policy add-cluster-role-to-user cluster-admin -z cloud-pak-deployer-sa\n```\n\n## Build deployer image and push to the internal registry\nBuilding the deployer image typically takes ~5 minutes. Only do this if the image has not been built yet.\n```\ncat << EOF | oc apply -f -\napiVersion: image.openshift.io/v1\nkind: ImageStream\nmetadata:\n  name: cloud-pak-deployer\nspec:\n  lookupPolicy:\n    local: true\nEOF\n\ncat << EOF | oc create -f -\nkind: Build\napiVersion: build.openshift.io/v1\nmetadata:\n  generateName: cloud-pak-deployer-bc-\n  namespace: cloud-pak-deployer\nspec:\n  serviceAccount: builder\n  source:\n    type: Git\n    git:\n      uri: 'https://github.com/IBM/cloud-pak-deployer'\n      ref: main\n  strategy:\n    type: Docker\n    dockerStrategy: {}\n  output:\n    to:\n      kind: ImageStreamTag\n      name: 'cloud-pak-deployer:latest'\n  triggeredBy:\n    - message: Manually triggered\nEOF\n```\n\nNow, wait until the deployer image has been built.\n```\noc get build -n cloud-pak-deployer -w\n```\n\n## Start the deployer wizard\n```\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-config\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cloud-pak-deployer-wizard\n  namespace: cloud-pak-deployer\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cloud-pak-deployer-wizard\n  template:\n    metadata:\n      name: cloud-pak-deployer-wizard\n      labels:\n        app: cloud-pak-deployer-wizard\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CPD_WIZARD_PAGE_TITLE\n          value: \"Cloud Pak Deployer\"\n#        - name: CPD_WIZARD_MODE\n#          value: existing-ocp\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: [\"/bin/sh\",\"-xc\"]\n        args: \n          - mkdir -p /Data/cpd-config/config && /cloud-pak-deployer/cp-deploy.sh env wizard -v\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-config   \n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \nEOF\n```\n\n## Expose the service and create the route\n```\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  name: cloud-pak-deployer-wizard-svc\n  namespace: cloud-pak-deployer    \nspec:\n  selector:                  \n    app: cloud-pak-deployer-wizard\n  ports:\n  - nodePort: 0\n    port: 8080            \n    protocol: TCP\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: route.openshift.io/v1\nkind: Route\nmetadata:\n  name: cloud-pak-deployer-wizard\nspec:\n  tls:\n    termination: edge\n  to:\n    kind: Service\n    name: cloud-pak-deployer-wizard-svc\n    weight: null\nEOF\n```\n\nNow you can access the deployer wizard using the route created in teh `cloud-pak-deployer` project.","fileAbsolutePath":"/home/runner/work/cloud-pak-deployer/cloud-pak-deployer/doc/src/pages/advanced/run-on-openshift/run-deployer-wizard-on-openshift.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}