(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{"013z":function(e,t,a){"use strict";var n=a("q1tI"),o=a.n(n),r=a("NmYn"),l=a.n(r),c=a("Wbzz"),i=a("Xrax"),d=a("k4MR"),s=a("TSYQ"),p=a.n(s),u=a("QH2O"),b=a.n(u),m=a("qKvR"),g=function(e){var t,a=e.title,n=e.theme,o=e.tabs,r=void 0===o?[]:o;return Object(m.b)("div",{className:p()(b.a.pageHeader,(t={},t[b.a.withTabs]=r.length,t[b.a.darkMode]="dark"===n,t))},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12"},Object(m.b)("h1",{id:"page-title",className:b.a.text},a)))))},y=a("BAC9"),O=function(e){var t=e.relativePagePath,a=e.repository,n=Object(c.useStaticQuery)("1364590287").site.siteMetadata.repository,o=a||n,r=o.baseUrl,l=o.subDirectory,i=r+"/edit/"+o.branch+l+"/src/pages"+t;return r?Object(m.b)("div",{className:"bx--row "+y.row},Object(m.b)("div",{className:"bx--col"},Object(m.b)("a",{className:y.link,href:i},"Edit this page on GitHub"))):null},k=a("FCXl"),x=a("dI71"),h=a("I8xM"),j=function(e){function t(){return e.apply(this,arguments)||this}return Object(x.a)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,n=e.slug,o=n.split("/").filter(Boolean).slice(-1)[0],r=a.map((function(e){var t,a=l()(e,{lower:!0,strict:!0}),r=a===o,i=new RegExp(o+"/?(#.*)?$"),d=n.replace(i,a);return Object(m.b)("li",{key:e,className:p()((t={},t[h.selectedItem]=r,t),h.listItem)},Object(m.b)(c.Link,{className:h.link,to:""+d},e))}));return Object(m.b)("div",{className:h.tabsContainer},Object(m.b)("div",{className:"bx--grid"},Object(m.b)("div",{className:"bx--row"},Object(m.b)("div",{className:"bx--col-lg-12 bx--col-no-gutter"},Object(m.b)("nav",{"aria-label":t},Object(m.b)("ul",{className:h.list},r))))))},t}(o.a.Component),v=a("MjG9"),f=a("CzIb"),w=a("Asxa"),T=a("OIbQ"),P=a.n(T),N=function(e){var t=e.date,a=new Date(t);return t?Object(m.b)(w.c,{className:P.a.row},Object(m.b)(w.a,null,Object(m.b)("div",{className:P.a.text},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null};t.a=function(e){var t=e.pageContext,a=e.children,n=e.location,o=e.Title,r=t.frontmatter,s=void 0===r?{}:r,p=t.relativePagePath,u=t.titleType,b=s.tabs,y=s.title,x=s.theme,h=s.description,w=s.keywords,T=s.date,P=Object(f.a)().interiorTheme,E=Object(c.useStaticQuery)("2456312558").site.pathPrefix,z=E?n.pathname.replace(E,""):n.pathname,F=b?z.split("/").filter(Boolean).slice(-1)[0]||l()(b[0],{lower:!0}):"",I=x||P;return Object(m.b)(d.a,{tabs:b,homepage:!1,theme:I,pageTitle:y,pageDescription:h,pageKeywords:w,titleType:u},Object(m.b)(g,{title:o?Object(m.b)(o,null):y,label:"label",tabs:b,theme:I}),b&&Object(m.b)(j,{title:y,slug:z,tabs:b,currentTab:F}),Object(m.b)(v.a,{padded:!0},a,Object(m.b)(O,{relativePagePath:p}),Object(m.b)(N,{date:T})),Object(m.b)(k.a,{pageContext:t,location:n,slug:z,tabs:b,currentTab:F}),Object(m.b)(i.a,null))}},BAC9:function(e,t,a){e.exports={bxTextTruncateEnd:"EditLink-module--bx--text-truncate--end--2pqje",bxTextTruncateFront:"EditLink-module--bx--text-truncate--front--3_lIE",link:"EditLink-module--link--1qzW3",row:"EditLink-module--row--1B9Gk"}},I8xM:function(e,t,a){e.exports={bxTextTruncateEnd:"PageTabs-module--bx--text-truncate--end--267NA",bxTextTruncateFront:"PageTabs-module--bx--text-truncate--front--3xEQF",tabsContainer:"PageTabs-module--tabs-container--8N4k0",list:"PageTabs-module--list--3eFQc",listItem:"PageTabs-module--list-item--nUmtD",link:"PageTabs-module--link--1mDJ1",selectedItem:"PageTabs-module--selected-item--YPVr3"}},OIbQ:function(e,t,a){e.exports={bxTextTruncateEnd:"last-modified-date-module--bx--text-truncate--end--123zi",bxTextTruncateFront:"last-modified-date-module--bx--text-truncate--front--3xeKz",text:"last-modified-date-module--text--24m-4",row:"last-modified-date-module--row--2BquN"}},QH2O:function(e,t,a){e.exports={bxTextTruncateEnd:"PageHeader-module--bx--text-truncate--end--mZWeX",bxTextTruncateFront:"PageHeader-module--bx--text-truncate--front--3zvrI",pageHeader:"PageHeader-module--page-header--3hIan",darkMode:"PageHeader-module--dark-mode--hBrwL",withTabs:"PageHeader-module--with-tabs--3nKxA",text:"PageHeader-module--text--o9LFq"}},nynq:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a("wx14"),o=a("zLVn"),r=(a("q1tI"),a("7ljp")),l=a("013z"),c=(a("qKvR"),["components"]),i={},d={_frontmatter:i},s=l.a;function p(e){var t=e.components,a=Object(o.a)(e,c);return Object(r.b)(s,Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"Running deployer wizard as a pod for existing OpenShift cluster"),Object(r.b)("h2",null,"Log in to the OpenShift cluster"),Object(r.b)("p",null,"Log is as a cluster administrator to be able to run the deployer with the correct permissions."),Object(r.b)("h2",null,"Prepare the deployer project"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"oc new-project cloud-pak-deployer \n\noc project cloud-pak-deployer\noc create serviceaccount cloud-pak-deployer-sa\noc adm policy add-scc-to-user privileged -z cloud-pak-deployer-sa\noc adm policy add-cluster-role-to-user cluster-admin -z cloud-pak-deployer-sa\n")),Object(r.b)("h2",null,"Build deployer image and push to the internal registry"),Object(r.b)("p",null,"Building the deployer image typically takes ~5 minutes. Only do this if the image has not been built yet."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: image.openshift.io/v1\nkind: ImageStream\nmetadata:\n  name: cloud-pak-deployer\nspec:\n  lookupPolicy:\n    local: true\nEOF\n\ncat << EOF | oc create -f -\nkind: Build\napiVersion: build.openshift.io/v1\nmetadata:\n  generateName: cloud-pak-deployer-bc-\n  namespace: cloud-pak-deployer\nspec:\n  serviceAccount: builder\n  source:\n    type: Git\n    git:\n      uri: 'https://github.com/IBM/cloud-pak-deployer'\n      ref: main\n  strategy:\n    type: Docker\n    dockerStrategy: {}\n  output:\n    to:\n      kind: ImageStreamTag\n      name: 'cloud-pak-deployer:latest'\n  triggeredBy:\n    - message: Manually triggered\nEOF\n")),Object(r.b)("p",null,"Now, wait until the deployer image has been built."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"oc get build -n cloud-pak-deployer -w\n")),Object(r.b)("h2",null,"Start the deployer wizard"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},'cat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-config\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 1Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: cloud-pak-deployer-status\n  namespace: cloud-pak-deployer\nspec:\n  accessModes:\n  - ReadWriteMany\n  resources:\n    requests:\n      storage: 10Gi\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: cloud-pak-deployer-wizard\n  namespace: cloud-pak-deployer\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: cloud-pak-deployer-wizard\n  template:\n    metadata:\n      name: cloud-pak-deployer-wizard\n      labels:\n        app: cloud-pak-deployer-wizard\n    spec:\n      containers:\n      - name: cloud-pak-deployer\n        image: cloud-pak-deployer:latest\n        imagePullPolicy: Always\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n        ports:\n        - containerPort: 8080\n          protocol: TCP\n        env:\n        - name: CONFIG_DIR\n          value: /Data/cpd-config\n        - name: STATUS_DIR\n          value: /Data/cpd-status\n        - name: CPD_WIZARD_PAGE_TITLE\n          value: "Cloud Pak Deployer"\n#        - name: CPD_WIZARD_MODE\n#          value: existing-ocp\n        volumeMounts:\n        - name: config-volume\n          mountPath: /Data/cpd-config\n        - name: status-volume\n          mountPath: /Data/cpd-status\n        command: ["/bin/sh","-xc"]\n        args: \n          - mkdir -p /Data/cpd-config/config && /cloud-pak-deployer/cp-deploy.sh env wizard -v\n      securityContext:\n        runAsUser: 0\n      serviceAccountName: cloud-pak-deployer-sa\n      volumes:\n      - name: config-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-config   \n      - name: status-volume\n        persistentVolumeClaim:\n          claimName: cloud-pak-deployer-status        \nEOF\n')),Object(r.b)("h2",null,"Expose the service and create the route"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"cat << EOF | oc apply -f -\napiVersion: v1\nkind: Service\nmetadata:\n  name: cloud-pak-deployer-wizard-svc\n  namespace: cloud-pak-deployer    \nspec:\n  selector:                  \n    app: cloud-pak-deployer-wizard\n  ports:\n  - nodePort: 0\n    port: 8080            \n    protocol: TCP\nEOF\n\ncat << EOF | oc apply -f -\napiVersion: route.openshift.io/v1\nkind: Route\nmetadata:\n  name: cloud-pak-deployer-wizard\nspec:\n  tls:\n    termination: edge\n  to:\n    kind: Service\n    name: cloud-pak-deployer-wizard-svc\n    weight: null\nEOF\n")),Object(r.b)("p",null,"Now you can access the deployer wizard using the route created in teh ",Object(r.b)("inlineCode",{parentName:"p"},"cloud-pak-deployer")," project."))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-advanced-run-on-openshift-run-deployer-wizard-on-openshift-mdx-ae55671c0d25c2525fec.js.map